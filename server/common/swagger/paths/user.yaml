paths:
  '/account/me':
    get:
      tags:
        - 'Account'
      summary: 'metadata for dynamic UI'
      operationId: 'getMe'
      security:
        - AccessToken: []
      responses:
        '200':
          description: successful operation
        '400':
          description: Invalid request
      x-swagger-router-controller: 'account'    
  '/account/signup/{roleId}':
    post:
      tags:
        - 'Account'
      summary: update an user
      operationId: 'signUp'
      security: []
      parameters:
        - name: roleId
          in: path
          description: ID of permission to user
          required: true
          schema:
            type: string
      requestBody:
        $ref: '#/components/requestBodies/SignUp'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountApiResponse'
      x-swagger-router-controller: 'account'      
  '/account/changepassword':
    post:
      tags:
        - 'Account'
      summary: User can change the new password
      description: This can only be done by the logged in user.
      operationId: 'changePassword'
      security: 
        - AccessToken: []
      requestBody:
        $ref: '#/components/requestBodies/ChangePassword'
      responses:
        default:
          description: successful operation
      x-swagger-router-controller: 'account'      
  '/account/resetmypassword':
    post:
      tags:
        - 'Account'
      summary: User can change the new password
      description: This can only be done by the logged in user.
      operationId: 'resetMyPassword'
      security:
        - AccessToken: []
      requestBody:
        $ref: '#/components/requestBodies/ResetMypassword'
      responses:
        default:
          description: successful operation
      x-swagger-router-controller: 'account'                
  '/account/resetpassword/{userId}':
    get:
      tags:
        - 'Account'
      summary: Find user by ID
      description: reset the password by admin
      operationId: 'resetPassword'
      security:
        - AccessToken: []
      parameters:
        - name: userId
          in: path
          description: ID of user to return
          required: true
          style: simple
          explode: false
          schema:
            type: string
      responses:
        '200':
          description: successful operation
        '400':
          description: Invalid User Id supplied
        '404':
          description: User not found
      x-swagger-router-controller: 'account'    
  '/account/forgotpassword':
    get:
      tags:
        - 'Account'
      summary: Logs user into the system
      operationId: 'forgetPassword'
      security: []
      parameters:
        - name: email
          in: query
          description: The email for login
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
        '400':
          description: Invalid email/password supplied
        '404':
          description: User not found
      x-swagger-router-controller: 'account'             
  '/account/forgotpasswordlink':
    get:
      tags:
        - 'Account'
      summary: User get the password through email
      operationId: 'forgetPasswordSendlink'
      security: []
      parameters:
        - name: email
          in: query
          description: The email for login
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
        '400':
          description: Invalid email/password supplied
        '404':
          description: User not found
      x-swagger-router-controller: 'account'           
  '/account/list':
    get:
      tags:
        - 'Account'
      summary: 'List out all the users'
      operationId: 'getList'
      security:
        - AccessToken: []
      parameters: []
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountListApiResponse'
      x-swagger-router-controller: 'account'
  '/account/metadata':
    get:
      tags:
        - 'Account'
      summary: 'metadata for dynamic UI'
      operationId: 'userMetadata'
      security: []
      parameters:
        - name: fields
          in: query
          description: field values that need to be considered for filter
          explode: false
          style: form
          allowReserved: true               
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: successful operation
        '400':
          description: Invalid request
      x-swagger-router-controller: 'account'
  '/account/search':
    post:
      tags:
        - 'Account'
      summary: search/filter the account list
      description: created search/filter object.
      operationId: 'userSearch'
      security:
        - AccessToken: []
      requestBody:
        $ref: '#/components/requestBodies/Search'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountListApiResponse'
      x-swagger-router-controller: 'account'
  '/account/search/summary':
    post:
      tags:
        - 'Account'
      summary: search/filter the account list
      description: created search/filter object.
      operationId: 'userSummary'
      security:
        - AccessToken: []
      requestBody:
        $ref: '#/components/requestBodies/Search'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountListApiResponse'
      x-swagger-router-controller: 'account'
  '/account/login':
    get:
      tags:
        - 'Account'
      summary: Logs user into the system
      operationId: 'loginUser'
      security: []
      parameters:
        - name: email
          in: query
          description: The email for login
          required: true
          schema:
            type: string
        - name: password
          in: query
          description: The password for login
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
        '400':
          description: Invalid email/password supplied
        '404':
          description: User not found
      x-swagger-router-controller: 'account'
  '/account/logout':
    get:
      tags:
        - 'Account'
      summary: Logs out current logged in user session
      operationId: 'logoutUser'
      security:
        - AccessToken: []
      responses:
        default:
          description: successful operation
      x-swagger-router-controller: 'account'
  '/account/image/upload/{userId}':      
    post:
      tags:
        - 'Account'
      summary: upload a profile image for user
      operationId: 'uploadImage'
      security:
        - AccessToken: []
      parameters:
        - name: userId
          in: path
          description: ID of user to update
          required: true
          schema:
            type: string
      requestBody:
        $ref: '#/components/requestBodies/UserProfileImage'         
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountApiResponse'
      x-swagger-router-controller: 'account'      
  '/account/{userId}/deleteprofile':
    get:
      tags:
        - 'Account'
      summary: Find user by ID
      description: reset the password by admin
      operationId: 'deleteProfile'
      security:
        - AccessToken: []
      parameters:
        - name: userId
          in: path
          description: ID of user to return
          required: true
          style: simple
          explode: false
          schema:
            type: string
      responses:
        '200':
          description: successful operation
        '400':
          description: Invalid User Id supplied
        '404':
          description: User not found
      x-swagger-router-controller: 'account'           
  '/account/{userId}':
    get:
      tags:
        - 'Account'
      summary: Find user by ID
      description: Returns a single user
      operationId: 'getUser'
      security:
        - AccessToken: []
      parameters:
        - name: userId
          in: path
          description: ID of user to return
          required: true
          style: simple
          explode: false
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountApiResponse'
        '400':
          description: Invalid User Id supplied
        '404':
          description: User not found
      x-swagger-router-controller: 'account'
    post:
      tags:
        - 'Account'
      summary: update an user
      operationId: 'userUpdate'
      security:
        - AccessToken: []
      parameters:
        - name: userId
          in: path
          description: ID of user to update
          required: true
          schema:
            type: string
      requestBody:
        $ref: '#/components/requestBodies/AccountUpdate'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountApiResponse'
      x-swagger-router-controller: 'account'
  '/account/{userId}/delete':
    post:
      tags:
        - 'Account'
      summary: Deletes a user
      operationId: 'userDelete'
      security:
        - AccessToken: []
      parameters:
        - name: userId
          in: path
          description: User id to delete
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
        '400':
          description: Invalid User Id supplied
        '404':
          description: User not found
      x-swagger-router-controller: 'account'
  '/account':
    post:
      tags:
        - 'Account'
      summary: Create user
      description: This can only be done by the logged in user.
      operationId: 'saveUser'
      security:
        - AccessToken: []
      requestBody:
        $ref: '#/components/requestBodies/Account'
      responses:
        default:
          description: successful operation
      x-swagger-router-controller: 'account'

components:
  schemas:
    Common:
      type: object
      properties:
        id:
          type: string
        name:
          type: string

    Enum_obj:
      type: object
      properties:
        displayName:
          type: string
        value:
          type: string

    Error:
      type: object
      properties:
        status:
          type: boolean
          default: false
        message:
          type: string
      required:
        - status
        - message

    Pagination:
      type: "object"
      properties:
        count:
          type: integer
        more:
          type: "boolean"
          default: false
        offset:
          type: integer
        page:
          type: integer
        total:
          type: integer
      example:
        count: 10
        more: true
        offset: 10
        page: 1
        total: 100

    search:
      type: "object"
      properties:
        count:
          type: integer
        exclude:
          type: array
          items:
            type: string
        include:
          type: array
          items:
            type: string
        order:
          type: array
          items: 
            type: object
        page:
          type: integer
        pagenationToken:
          type: string
        term:
          type: string
        fields: 
          type: array
          items: 
            type: string
        filter:
          type: object
      example:
        count: 10
        exclude: []
        include: []
        order: [{field: "firstName", order: "asc"}]
        page: 1
        pagenationToken: ""
        term: ""
        fields: []
        filter: {}

    Packages:
      type: object
      required:
        - name
      properties:
        name:
          type: string
        type:
          type: string
          x-nullable: true
          description: 'One time, Monthly, Annual'
          enum:
            - '1'
            - '2'
            - '3'
            - ''
        price:
          type: integer
          description: 'Price of the packages'

    PackagesUpdate:
      type: object
      properties:
        name:
          type: string
        type:
          type: string
          x-nullable: true
          description: 'One time, Monthly, Annual'
          enum:
            - '1'
            - '2'
            - '3'
            - ''
        price:
          type: integer
          description: 'Price of the packages'

    PackageDetails:
      type: object
      properties:
        package_id:
          type: string
        item_id:
          type: string
        quantity:
          type: integer
          description: 'Quantity of the packages'        

    Items:
      type: object
      properties:
        name:
          type: string
        type:
          type: string
          x-nullable: true
          description: 'Room, Advanced Room, Booth, Viewer Hours, Cloud Storage, Support Hour'
          enum:
            - '1'
            - '2'
            - '3'
            - '4'
            - '5'
            - '6'            
            - ''      
        payment_cycle:
          type: string
          x-nullable: true
          description: 'One time, Monthly'
          enum:
            - '1'
            - '2'
            - '3'
            - '' 
        unit:
          type: string
          x-nullable: true
          description: 'Room, Hour, GB, Session'
          enum:
            - '1'
            - '2'
            - '3'
            - '4'            
            - ''                             
        price:
          type: integer
          description: 'Price of the packages'

    Invoice:
      type: object
      properties:
        issue_date:
          type: string
        sub_total:
          type: integer
        discount:
          type: integer
        total:
          type: integer          
        stripe_payment_id:
          type: string
        payment_date:
          type: string
          description: 'date of payment'
        subscription_details_id:
          type: string
        stellar_id:
          type: string
        notes:
          type: string

    InvoiceDetails:
      type: object
      properties:
        item_id:
          type: string
        quantity:
          type: integer
        unit_price:
          type: integer
        total:
          type: integer
        invoice_id:
          type: string
        start_date:
          type: string
          description: 'start date'
        expiry_date:
          type: string
          description: 'expiry date'          

    Subscription:
      type: object
      properties:
        user_id:
          type: string
        organization_id:
          type: string    
        organization_type:
          type: string  
        stripe_customer_id:
          type: string    
        stripe_source_id:
          type: string                                 
        auto_renew:
          type: boolean
        start_date:
          type: string
          description: 'start date'
        end_date:
          type: string
          description: 'end date' 
        package_id:
          type: string 
        stat_std_rooms:
          type: string     
        stat_adv_rooms:
          type: string 
        stat_booths:
          type: string 
        stat_viewer_hrs:
          type: string 
        stat_support_hrs:
          type: string 
        stat_recording_gb:
          type: string 
        stat_act_std_rooms:
          type: string     
        stat_act_adv_rooms:
          type: string 
        stat_act_booths:
          type: string 
        stat_rem_viwer_hrs:
          type: string 
        stat_rem_support_hrs:
          type: string     
        stat_rem_recording_gb:
          type: string                                                                                                     

    PackagesListApiResponse:
      type: 'object'
      properties:
        status:
          type: boolean
          default: false
        pagination:
          $ref: '#/components/schemas/Pagination'
        results:
          type: array
          items:
            $ref: '#/components/schemas/Packages'

    PackagesApiResponse:
      type: 'object'
      properties:
        status:
          type: boolean
          default: false
        results:
          $ref: '#/components/schemas/Packages'

    ItemsListApiResponse:
      type: 'object'
      properties:
        status:
          type: boolean
          default: false
        pagination:
          $ref: '#/components/schemas/Pagination'
        results:
          type: array
          items:
            $ref: '#/components/schemas/Items'

    ItemsApiResponse:
      type: 'object'
      properties:
        status:
          type: boolean
          default: false
        results:
          $ref: '#/components/schemas/Items'

    CommonListApiResponse:
      type: 'object'
      properties:
        status:
          type: boolean
          default: false
        pagination:
          $ref: '#/components/schemas/Pagination'
        results:
          type: array
          items:
            $ref: '#/components/schemas/Common'

    CommonApiResponse:
      type: 'object'
      properties:
        status:
          type: boolean
          default: false
        results:
          $ref: '#/components/schemas/Common'

    InvoiceListApiResponse:
      type: 'object'
      properties:
        status:
          type: boolean
          default: false
        pagination:
          $ref: '#/components/schemas/Pagination'
        results:
          type: array
          items:
            $ref: '#/components/schemas/Invoice'

    InvoiceApiResponse:
      type: 'object'
      properties:
        status:
          type: boolean
          default: false
        results:
          $ref: '#/components/schemas/Invoice'

    InvoiceDetailsListApiResponse:
      type: 'object'
      properties:
        status:
          type: boolean
          default: false
        pagination:
          $ref: '#/components/schemas/Pagination'
        results:
          type: array
          items:
            $ref: '#/components/schemas/InvoiceDetails'

    InvoiceDetailsApiResponse:
      type: 'object'
      properties:
        status:
          type: boolean
          default: false
        results:
          $ref: '#/components/schemas/InvoiceDetails'          

    PackageDetailsListApiResponse:
      type: 'object'
      properties:
        status:
          type: boolean
          default: false
        pagination:
          $ref: '#/components/schemas/Pagination'
        results:
          type: array
          items:
            $ref: '#/components/schemas/PackageDetails'

    PackageDetailsApiResponse:
      type: 'object'
      properties:
        status:
          type: boolean
          default: false
        results:
          $ref: '#/components/schemas/PackageDetails'

    SubscriptionListApiResponse:
      type: 'object'
      properties:
        status:
          type: boolean
          default: false
        pagination:
          $ref: '#/components/schemas/Pagination'
        results:
          type: array
          items:
            $ref: '#/components/schemas/Subscription'

    SubscriptionApiResponse:
      type: 'object'
      properties:
        status:
          type: boolean
          default: false
        results:
          $ref: '#/components/schemas/Subscription'

  requestBodies:
    Packages:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Packages'
      description: Packages object that needs to be added to the db
      x-name: body
      required: true

    PackagesUpdate:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PackagesUpdate'
      description: Packages object that needs to be updated to the db
      x-name: body
      required: true      

    PackageDetails:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PackageDetails'
      description: Package details object that needs to be added to the db
      x-name: body
      required: true

    Items:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Items'
      description: Items object that needs to be added to the db
      x-name: body
      required: true

    Invoice:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Invoice'
      description: Invoice object that needs to be added to the db
      x-name: body
      required: true

    InvoiceDetails:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/InvoiceDetails'
      description: Invoice details object that needs to be added to the db
      x-name: body
      required: true

    Subscription:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Subscription'
      description: Subscription details object that needs to be added to the db
      x-name: body
      required: true            

    Search:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Search'
      description: get the users list based on query
      x-name: body
      required: true

  securitySchemes:
    AccessToken:
      type: apiKey
      name: authorization
      in: header
security:
  - AccessToken: []
